<?php// <IMAGE_PROPERTIES WIDTH="11200" HEIGHT="17400" NUMTILES="4005" NUMIMAGES="1" VERSION="1.8" TILESIZE="256" />flush();// set the URL and Path variables$basePath = '/var/www/web12/html/nga/chartimages/';$baseUrl = 'http://www.charts.noaa.gov/NGAViewer/';$propFileName = 'ImageProperties.xml';// get the chart numbers from text file$chartNumbers = file('NGA-Charts-3.txt');#$chartNumbers = array(61601);foreach ($chartNumbers as $line) {    $chart = trim($line);	// create the directory if not already exists	$path = $basePath . $chart;	if(!file_exists($path)) {		$ua = umask(0);		$md = mkdir($basePath . $chart, 0744);		umask($ua);		if(!$md) {			echo"Could not create directory $chart!<br>Script aborted!";			exit;		}	}	// open the ImageProperties file and get the values	$url = $baseUrl.$chart."/".$propFileName;	$props = file_get_contents($url);	preg_match('/WIDTH="([0-9]*)"/', $props, $treffer);	$width = $treffer[1];	preg_match('/HEIGHT="([0-9]*)"/', $props, $treffer);	$height = $treffer[1];	preg_match('/NUMTILES="([0-9]*)"/', $props, $treffer);	$numTiles = $treffer[1];	preg_match('/TILESIZE="([0-9]*)"/', $props, $treffer);	$tileSize = $treffer[1];	// calculate other values	$x = floor($width / 256);	$y = floor($height / 256);	$twidth = ceil($width / $tileSize);	$theight = ceil($height / $tileSize);	$zoomLevel = 1;	while ($twidth != 1 and $theight != 1) {		$twidth = ceil($twidth / 2.0);		$theight = ceil($theight / 2.0);		$zoomLevel++;	}#$zoomLevel--; // ATTENTION: only when calculated zoom level differs from real zl!!!	$numTilesLevel = $x * $y + $x + $y + 1;	#echo"Width: $width<br>Height: $height<br>NumTiles: $numTiles<br>NumTilesLevel: $numTilesLevel<br>X: $x<br>Y: $y<br>Zoom: $zoomLevel<br>";	$errors_getfile = array ();	$errors_putfile = array();	for($i = 0; $i <= $x; $i++) {		for($j = 0; $j <= $y; $j++) {			$index = getIndexNumber($i, $j);			$tg = getTileGroupNumber($index);			$filename = $zoomLevel.'-'.$i.'-'.$j.'.jpg';			$filepath = $baseUrl.$chart.'/TileGroup'.$tg.'/';			$filenamenew = $i.'-'.$j.'.jpg';			$getPath = $filepath.$filename;			$putPath = $path.'/'.$filenamenew;						if(file_exists($putPath)) continue;			else {				$file = file_get_contents($getPath);				if(!$file) {					for ($k = 0; $k <= floor($numTiles/$tileSize); $k++) {						$getPath = $baseUrl.$chart.'/TileGroup'.$k.'/'.$filename;						$file = file_get_contents($getPath);						if($file) {							file_put_contents($putPath, $file);							break;						}					}					if(!$file) array_push($errors_getfile, $filename);				}				else file_put_contents($putPath, $file);				echo"$getPath";			}			flush();		}	}	echo"Done!";	$counter = 0;	for($i = 0; $i <= $x; $i++) {		for($j = 0; $j <= $y; $j++) {			$filenamenew = $i.'-'.$j.'.jpg';			$validatepath = $path.'/'.$filenamenew;			if(file_exists($validatepath)) {				$counter++;				continue;			}			else array_push($errors_putfile, $filenamenew);		}	}		if($counter == $numTilesLevel) $log = "All $counter files were downloaded!";	else $log = "Only $counter of $numTilesLevel files were downloaded!\n";	if(count($errors_getfile) > 0) {		$log .= "The following image files are missing:\n";		foreach($errors_getfile as $key => $val) {			$log .= $key.": ".$val."\n";		}	}	if(count($errors_putfile) > 0) {		$log .= "The following image files were not written to disk:\n";		foreach($errors_putfile as $key => $val) {			$log .= $key.": ".$val."\n";		}	}	file_put_contents($path.'/log'.$chart.'.txt', $log);	$doc = new DomDocument('1.0', 'UTF-8');	$xml_chart = $doc->createElement('chart');	$xml_properties = $doc->createElement('properties');	$xml_number = $doc->createElement('number',$chart);	$xml_properties->appendChild($xml_number);	$xml_width = $doc->createElement('width',$width);	$xml_properties->appendChild($xml_width);	$xml_height = $doc->createElement('height',$height);	$xml_properties->appendChild($xml_height);	$xml_tiles = $doc->createElement('tiles',$numTilesLevel);	$xml_properties->appendChild($xml_tiles);	$xml_xtiles = $doc->createElement('xtiles',$x);	$xml_properties->appendChild($xml_xtiles);	$xml_ytiles = $doc->createElement('ytiles',$y);	$xml_properties->appendChild($xml_ytiles);	$xml_tilesize = $doc->createElement('tilesize',$tileSize);	$xml_properties->appendChild($xml_tilesize);	$xml_chart->appendChild($xml_properties);	$doc->appendChild($xml_chart);	echo $doc->saveXML();	$doc->save($path.'/'.$chart.'.xml');}function getIndexNumber($xc, $yc) {	global $x, $y, $numTiles, $numTilesLevel;	#echo"<br>XC: $xc <-> YC: $yc<br>x: $x <-> y: $y<br>";	$ind = $xc + ($yc - 1) * $x + ($numTiles - $numTilesLevel);	return ($ind);}function getTileGroupNumber($t) {	return(floor($t/256));}?>